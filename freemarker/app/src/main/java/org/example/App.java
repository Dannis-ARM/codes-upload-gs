/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import java.io.File;
import java.io.IOException;
import java.io.StringWriter;
import java.util.HashMap;
import java.util.Map;

import freemarker.template.Configuration;
import freemarker.template.Template;
import freemarker.template.TemplateException;
import freemarker.template.TemplateExceptionHandler;

public class App {
    public static void main(String[] args) {
        // Create and set up the FreeMarker configuration
        Configuration cfg = new Configuration(Configuration.VERSION_2_3_34);
        try {
            // Set the directory where your templates are located
            cfg.setDirectoryForTemplateLoading(new File("E:\\Projects\\CodesUpload\\freemarker\\ftl"));

            // Set the default charset
            cfg.setDefaultEncoding("UTF-8");

            // Set the template cache TTL (Time To Live)
            cfg.setTemplateExceptionHandler(TemplateExceptionHandler.RETHROW_HANDLER);

            // Load the template
            Template template = cfg.getTemplate("sample.ftl");

            // Create a data model (a Map in this case)
            Map<String, Object> dataModel = new HashMap<>();
            dataModel.put("name", "Kimi");
            dataModel.put("message", "Hello, FreeMarker!");
            dataModel.put("condition", true); // Example of a boolean condition

            // Process the template
            StringWriter out = new StringWriter();
            template.process(dataModel, out);

            // Print the result
            System.out.println(out.toString());
        } catch (IOException | TemplateException e) {
            e.printStackTrace();
        }
    }

    public String getGreeting() {
        return "Hello, World!";
    }
}